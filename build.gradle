plugins {
    id 'fabric-loom' version '1.10.+'
}

version = project.mod_version
group   = project.maven_group

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }

    // Optional integrations (only used if versions are set)
    maven { url = 'https://maven.terraformersmc.com/releases/' } // ModMenu
    maven { url = 'https://maven.isxander.dev/releases' }        // YACL
    maven { url = 'https://api.modrinth.com/maven' }             // Xaero (Modrinth)
    maven { url = 'https://cursemaven.com' }                     // Xaero (fallback)
}

// tiny helpers
def hasProp = { String k -> project.hasProperty(k) && project.property(k)?.toString()?.trim() }
def prop    = { String k, String d = "" -> (hasProp(k) ? project.property(k).toString() : d) }

dependencies {
    // Core
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings  "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    // ---------- OPTIONAL INTEGRATIONS (only added if you set versions) ----------
    // ModMenu
    if (hasProp('modmenu_version')) {
        def v = prop('modmenu_version')
        modCompileOnly "com.terraformersmc:modmenu:${v}"
        modRuntimeOnly "com.terraformersmc:modmenu:${v}"
    }

    // YACL v3
    if (hasProp('yacl_version')) {
        def v = prop('yacl_version')
        modCompileOnly "dev.isxander:yacl3-fabric:${v}"
        modRuntimeOnly "dev.isxander:yacl3-fabric:${v}"
    }

    // Xaero’s (prefer Modrinth coords if provided)
    if (hasProp('xaero_minimap_version')) {
        def v = prop('xaero_minimap_version')
        modCompileOnly "maven.modrinth:xaeros-minimap:${v}"
        modRuntimeOnly "maven.modrinth:xaeros-minimap:${v}"
    } else if (hasProp('xaero_minimap_fileId')) {
        // CurseMaven: project id 263420
        modCompileOnly "curse.maven:xaeros-minimap-263420:${prop('xaero_minimap_fileId')}"
        modRuntimeOnly "curse.maven:xaeros-minimap-263420:${prop('xaero_minimap_fileId')}"
    }

    if (hasProp('xaero_worldmap_version')) {
        def v = prop('xaero_worldmap_version')
        modCompileOnly "maven.modrinth:xaeros-world-map:${v}"
        modRuntimeOnly "maven.modrinth:xaeros-world-map:${v}"
    } else if (hasProp('xaero_worldmap_fileId')) {
        // CurseMaven: project id 317780
        modCompileOnly "curse.maven:xaeros-world-map-317780:${prop('xaero_worldmap_fileId')}"
        modRuntimeOnly "curse.maven:xaeros-world-map-317780:${prop('xaero_worldmap_fileId')}"
    }
    // ---------------------------------------------------------------------------
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(project.java_version as int) }
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.release = project.java_version as int
}

// Safe resource expansion: fill any placeholders in fabric.mod.json if present.
// Missing ones default to empty string so Gradle won’t crash.
processResources {
    def props = [
        version            : version,
        loader_version     : prop('loader_version'),
        minecraft_version  : prop('minecraft_version'),
        fabric_api_version : prop('fabric_api_version'),
        archives_base_name : prop('archives_base_name'),
        mod_version        : prop('mod_version'),
        java_version       : prop('java_version'),
        maven_group        : prop('maven_group'),
        // optional mod versions (only used if referenced in your fabric.mod.json)
        modmenu_version         : prop('modmenu_version'),
        yacl_version            : prop('yacl_version'),
        xaero_minimap_version   : prop('xaero_minimap_version'),
        xaero_worldmap_version  : prop('xaero_worldmap_version')
    ]
    inputs.properties(props)
    filesMatching("fabric.mod.json") { expand(props) }
}
